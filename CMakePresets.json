{
    "version": 4,
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 25,
        "patch": 0
    },
    "configurePresets": [
        {
            "name": "conf-common",
            "description": "General settings that apply to all configurations",
            "hidden": true,
            "generator": "Visual Studio 17 2022",
            "binaryDir": "${sourceDir}/build/${hostSystemName}/Desktop",
            "installDir": "${sourceDir}/build/install/${hostSystemName}/Desktop",
            "cacheVariables": {
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
                "CMAKE_COLOR_DIAGNOSTICS": "ON",
                "VCPKG_TARGET_ANDROID": "OFF"
            }
        },
        {
            "name": "conf-clang-common",
            "description": "General settings that apply to all configurations",
            "hidden": true,
            "generator": "Ninja Multi-Config",
            "binaryDir": "${sourceDir}/build/${hostSystemName}/Desktop",
            "installDir": "${sourceDir}/build/install/${hostSystemName}/Desktop",
            "cacheVariables": {
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
                "CMAKE_COLOR_DIAGNOSTICS": "ON",
                "VCPKG_TARGET_ANDROID": "OFF"
            }
        },
        {
            "name": "conf-unixlike-common",
            "description": "Unix-like OS settings for gcc and clang toolchains",
            "hidden": true,
            "inherits": "conf-clang-common",
            "cacheVariables": {
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_TARGET_TRIPLET": "x64-osx-dynamic"
            },
            "vendor": {
                "microsoft.com/VisualStudioRemoteSettings/CMake/1.0": {
                    "sourceDir": "$env{HOME}/.vs/$ms{projectDirName}"
                }
            }
        },
        {
            "name": "conf-unixlike-4Android-common",
            "description": "Unix-like OS settings for ndk clang toolchains with vcpkg",
            "hidden": true,
            "generator": "Ninja Multi-Config",
            "binaryDir": "${sourceDir}/build/${hostSystemName}/Other/${presetName}",
            "installDir": "${sourceDir}/build/install/${hostSystemName}/Other/${presetName}",
            "cacheVariables": {
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "VCPKG_CHAINLOAD_TOOLCHAIN_FILE": "$env{ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake",
                "VCPKG_TARGET_ANDROID": "ON",
                "VCPKG_INSTALL_OPTIONS": "--allow-unsupported",
                "CMAKE_SYSTEM_NAME": "Android"
            },
            "vendor": {
                "microsoft.com/VisualStudioRemoteSettings/CMake/1.0": {
                    "sourceDir": "$env{HOME}/.vs/$ms{projectDirName}"
                }
            }
        },
        {
            "name": "conf-windows-common",
            "description": "Windows settings for MSBuild toolchain that apply to msvc and clang",
            "hidden": true,
            "inherits": "conf-common",
            "cacheVariables": {
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "CLANG_SANITIZER_PATH": "C:/Program Files/LLVM/lib/clang/19/lib/windows",
                "VCPKG_TARGET_TRIPLET": "x64-windows-release"
            },
            "architecture": {
                "value": "x64",
                "strategy": "external"
            },
            "toolset": {
                "value": "host=x64",
                "strategy": "external"
            }
        },
        {
            "name": "conf-clang-windows-common",
            "description": "Windows settings for MSBuild toolchain that apply to msvc and clang",
            "hidden": true,
            "inherits": "conf-clang-common",
            "cacheVariables": {
                "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                "CLANG_SANITIZER_PATH": "C:/Program Files/LLVM/lib/clang/19/lib/windows",
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            },
            "architecture": {
                "value": "x64",
                "strategy": "external"
            },
            "toolset": {
                "value": "host=x64",
                "strategy": "external"
            }
        },
        {
            "name": "msvc-safe",
            "displayName": "MSVC Safe",
            "description": "Target Windows with the msvc compiler, debug build type",
            "inherits": "conf-windows-common",
            "cacheVariables": {
                "PRESET_NAME": "Safe",
                "CPPCOMPILER": "MSVC",
                "CMAKE_BUILD_TYPE": "Debug",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "ON",
                "ENABLE_SANITIZER": "ON",
                "ENABLE_WARNING": "ON",
                "ENABLE_TESTING": "OFF",
                "ENABLE_BENCHMARK": "1"
            }
        },
        {
            "name": "msvc-test",
            "displayName": "MSVC Test",
            "description": "Target Windows with the msvc compiler, debug build type",
            "inherits": "conf-windows-common",
            "cacheVariables": {
                "PRESET_NAME": "Test",
                "CPPCOMPILER": "MSVC",
                "CMAKE_BUILD_TYPE": "Debug",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "OFF",
                "ENABLE_SANITIZER": "OFF",
                "ENABLE_WARNING": "ON",
                "ENABLE_TESTING": "ON",
                "ENABLE_BENCHMARK": "1"
            }
        },
        {
            "name": "msvc-release",
            "displayName": "MSVC Release",
            "description": "Target Windows with the msvc compiler, release build type",
            "inherits": "conf-windows-common",
            "cacheVariables": {
                "PRESET_NAME": "",
                "CPPCOMPILER": "MSVC",
                "CMAKE_BUILD_TYPE": "Release",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "OFF",
                "ENABLE_SANITIZER": "OFF",
                "ENABLE_WARNING": "OFF",
                "ENABLE_TESTING": "OFF",
                "ENABLE_BENCHMARK": "1"
            }
        },
        {
            "name": "win-clang-safe",
            "displayName": "Windows Clang Safe",
            "description": "Target Windows with the clang compiler, debug build type",
            "inherits": "conf-clang-windows-common",
            "cacheVariables": {
                "PRESET_NAME": "Safe",
                "CPPCOMPILER": "clang++",
                "CMAKE_BUILD_TYPE": "Debug",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "ON",
                "ENABLE_SANITIZER": "ON",
                "ENABLE_WARNING": "ON",
                "ENABLE_TESTING": "OFF",
                "ENABLE_BENCHMARK": "1"
            },
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "intelliSenseMode": "windows-clang-x64"
                }
            }
        },
        {
            "name": "win-clang-test",
            "displayName": "Windows Clang Test",
            "description": "Target Windows with the clang compiler, debug build type",
            "inherits": "conf-clang-windows-common",
            "cacheVariables": {
                "PRESET_NAME": "Test",
                "CPPCOMPILER": "clang++",
                "CMAKE_BUILD_TYPE": "Debug",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "OFF",
                "ENABLE_SANITIZER": "OFF",
                "ENABLE_WARNING": "ON",
                "ENABLE_TESTING": "ON",
                "ENABLE_BENCHMARK": "1"
            },
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "intelliSenseMode": "windows-clang-x64"
                }
            }
        },
        {
            "name": "win-clang-release",
            "displayName": "Windows Clang Release",
            "description": "Target Windows with the clang compiler, release build type",
            "inherits": "conf-clang-windows-common",
            "cacheVariables": {
                "PRESET_NAME": "",
                "CPPCOMPILER": "clang++",
                "VCPKG_INSTALL_OPTIONS": "--no-print-usage",
                "CMAKE_BUILD_TYPE": "Release",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "OFF",
                "ENABLE_SANITIZER": "OFF",
                "ENABLE_WARNING": "OFF",
                "ENABLE_TESTING": "OFF",
                "ENABLE_BENCHMARK": "1"
            },
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "intelliSenseMode": "windows-clang-x64"
                }
            }
        },
        {
            "name": "unix-clang-safe",
            "displayName": "Unix Clang Safe",
            "description": "Target Unix-like OS with the clang compiler, debug build type",
            "inherits": "conf-unixlike-common",
            "cacheVariables": {
                "PRESET_NAME": "Safe",
                "CPPCOMPILER": "clang++",
                "CMAKE_BUILD_TYPE": "Debug",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "ON",
                "ENABLE_SANITIZER": "ON",
                "ENABLE_WARNING": "ON",
                "ENABLE_TESTING": "OFF",
                "ENABLE_BENCHMARK": "1"
            }
        },
        {
            "name": "unix-clang-test",
            "displayName": "Unix Clang Test",
            "description": "Target Unix-like OS with the clang compiler, debug build type",
            "inherits": "conf-unixlike-common",
            "cacheVariables": {
                "PRESET_NAME": "Test",
                "CPPCOMPILER": "clang++",
                "CMAKE_BUILD_TYPE": "Debug",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "OFF",
                "ENABLE_SANITIZER": "OFF",
                "ENABLE_WARNING": "ON",
                "ENABLE_TESTING": "ON",
                "ENABLE_BENCHMARK": "1"
            }
        },
        {
            "name": "unix-clang-release",
            "displayName": "Unix Clang Release",
            "description": "Target Unix-like OS with the clang compiler, debug build type",
            "inherits": "conf-unixlike-common",
            "cacheVariables": {
                "PRESET_NAME": "",
                "CPPCOMPILER": "clang++",
                "CMAKE_BUILD_TYPE": "Release",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "OFF",
                "ENABLE_SANITIZER": "OFF",
                "ENABLE_WARNING": "OFF",
                "ENABLE_TESTING": "OFF",
                "ENABLE_BENCHMARK": "0"
            }
        },
        {
            "name": "arm64-v8a-android",
            "displayName": "arm64-Android-Release",
            "description": "Target Unix-like OS with the clang compiler, debug build type",
            "inherits": "conf-unixlike-4Android-common",
            "cacheVariables": {
                "CMAKE_ANDROID_NDK": "$env{ANDROID_NDK_HOME}",
                "ANDROID_ABI": "arm64-v8a",
                "PRESET_NAME": "",
                "CPPCOMPILER": "clang++",
                "CMAKE_BUILD_TYPE": "Release",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "OFF",
                "ENABLE_SANITIZER": "OFF",
                "ENABLE_WARNING": "OFF",
                "ENABLE_TESTING": "OFF",
                "ENABLE_BENCHMARK": "0",
                "CMAKE_SYSTEM_VERSION": "33",
                "CMAKE_ANDROID_ARCH_ABI": "arm64-v8a",
                "CMAKE_ANDROID_STL_TYPE": "c++_shared"
            }
        },
        {
            "name": "armeabi-v7a-android",
            "displayName": "armeabi-v7a-Android-Release",
            "description": "Target Unix-like OS with the clang compiler, debug build type",
            "inherits": "conf-unixlike-4Android-common",
            "cacheVariables": {
                "CMAKE_ANDROID_NDK": "$env{ANDROID_NDK_HOME}",
                "ANDROID_ABI": "armeabi-v7a",
                "PRESET_NAME": "",
                "CPPCOMPILER": "clang++",
                "CMAKE_BUILD_TYPE": "Release",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "OFF",
                "ENABLE_SANITIZER": "OFF",
                "ENABLE_WARNING": "OFF",
                "ENABLE_TESTING": "OFF",
                "ENABLE_BENCHMARK": "0",
                "CMAKE_SYSTEM_VERSION": "33",
                "CMAKE_ANDROID_ARCH_ABI": "armeabi-v7a",
                "CMAKE_ANDROID_STL_TYPE": "c++_shared"
            }
        },
        {
            "name": "x86-android",
            "displayName": "x86-Android-Release",
            "description": "Target Unix-like OS with the clang compiler, debug build type",
            "inherits": "conf-unixlike-4Android-common",
            "cacheVariables": {
                "CMAKE_ANDROID_NDK": "$env{ANDROID_NDK_HOME}",
                "ANDROID_ABI": "x86",
                "PRESET_NAME": "",
                "CPPCOMPILER": "clang++",
                "CMAKE_BUILD_TYPE": "Release",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "OFF",
                "ENABLE_SANITIZER": "OFF",
                "ENABLE_WARNING": "OFF",
                "ENABLE_TESTING": "OFF",
                "ENABLE_BENCHMARK": "0",
                "CMAKE_SYSTEM_VERSION": "33",
                "CMAKE_ANDROID_ARCH_ABI": "x86",
                "CMAKE_ANDROID_STL_TYPE": "c++_shared"
            }
        },
        {
            "name": "x64-android",
            "displayName": "x64-Android-Release",
            "description": "Target Unix-like OS with the clang compiler, debug build type",
            "inherits": "conf-unixlike-4Android-common",
            "cacheVariables": {
                "CMAKE_ANDROID_NDK": "$env{ANDROID_NDK_HOME}",
                "ANDROID_ABI": "x86_64",
                "PRESET_NAME": "",
                "CPPCOMPILER": "clang++",
                "CMAKE_BUILD_TYPE": "Release",
                "INTERNAL_MYLIB_USAGE": "ON",
                "MYLIB_TYPE": "STATIC",
                "STATIC_ANALYZER": "OFF",
                "ENABLE_SANITIZER": "OFF",
                "ENABLE_WARNING": "OFF",
                "ENABLE_TESTING": "OFF",
                "ENABLE_BENCHMARK": "0",
                "CMAKE_SYSTEM_VERSION": "33",
                "CMAKE_ANDROID_ARCH_ABI": "x86_64",
                "CMAKE_ANDROID_STL_TYPE": "c++_shared"
            }
        }
    ],
    "buildPresets": [
        {
            "name": "msvc-safe",
            "displayName": "MSVC Safe",
            "configurePreset": "msvc-safe",
            "configuration": "Debug"
        },
        {
            "name": "msvc-test",
            "displayName": "MSVC Test",
            "configurePreset": "msvc-test",
            "configuration": "Debug"
        },
        {
            "name": "msvc-release",
            "displayName": "MSVC Release",
            "configurePreset": "msvc-release",
            "configuration": "Release"
        },
        {
            "name": "win-clang-safe",
            "displayName": "Windows Clang Safe",
            "configurePreset": "win-clang-safe",
            "configuration": "Debug"
        },
        {
            "name": "win-clang-test",
            "displayName": "Windows Clang Test",
            "configurePreset": "win-clang-test",
            "configuration": "Debug"
        },
        {
            "name": "win-clang-release",
            "displayName": "Windows Clang Release",
            "configurePreset": "win-clang-release",
            "configuration": "Release"
        },
        {
            "name": "unix-clang-safe",
            "displayName": "Unix Clang Safe",
            "configurePreset": "unix-clang-safe",
            "configuration": "Debug"
        },
        {
            "name": "unix-clang-test",
            "displayName": "Unix Clang Test",
            "configurePreset": "unix-clang-test",
            "configuration": "Debug"
        },
        {
            "name": "unix-clang-release",
            "displayName": "Unix Clang Release",
            "configurePreset": "unix-clang-release",
            "configuration": "Release"
        }
    ],
    "testPresets": [
        {
            "name": "test-common",
            "description": "Test CMake settings that apply to all configurations",
            "hidden": true,
            "output": {
                "outputOnFailure": true
            },
            "execution": {
                "noTestsAction": "error",
                "stopOnFailure": true
            }
        },
        {
            "name": "test-win-clang-warn-stlib",
            "displayName": "Strict",
            "description": "Enable output and stop on failure",
            "inherits": "test-common",
            "configurePreset": "msvc-test"
        },
        {
            "name": "test-win-msvc-warn-stlib",
            "displayName": "Strict",
            "description": "Enable output and stop on failure",
            "inherits": "test-common",
            "configurePreset": "win-clang-test"
        },
        {
            "name": "test-unix-clang-debug-warn-stlib",
            "displayName": "Strict",
            "description": "Enable output and stop on failure",
            "inherits": "test-common",
            "configurePreset": "unix-clang-test"
        }
    ]
}